{"version":3,"file":"app~7bd12dde.bundle.js","mappings":";sJAOA,QALqB,CACnBA,KAAM,GAAF,OAAKC,EAAAA,EAAAA,SAAe,QACxBC,OAAQ,SAACC,GAAE,gBAAQF,EAAAA,EAAAA,SAAe,kBAAUE,EAAE,sPCHhD,irOAeA,QAdiB,yBADjB,4FACiB,SADjB,QAMG,EALc,EAWd,OAZH,EACiB,OADjB,EACiB,kCACf,sGACyBC,MAAMC,EAAAA,MAAkB,OAAjC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,gFAED,WAAoBN,GAAE,yFACGC,MAAMC,EAAAA,OAAoBF,IAAI,OAAvC,OAARG,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaE,YAAU,2CAC/B,+CAZH,6DAYG,EAXc,4SCDjB,gnGAAAC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAGA,IAAQC,EAAuDX,EAAAA,EAAAA,cAAxCY,EAAwCZ,EAAAA,EAAAA,iBAAtBa,EAAsBb,EAAAA,EAAAA,kBAEzDc,GAAYC,EAAAA,EAAAA,IAAOJ,EAAeC,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IA8BF,QA3B8B,CACtBC,SAAQ,SAAClB,GAAI,oGACZA,EAAI,CAAF,gEAIOY,EAAS,uCAAEO,IAAIR,EAAmBX,IAAE,0CALjC,EAMnB,EAEMoB,YAAW,WAAG,iHACJR,EAAS,uCAAES,OAAOV,IAAiB,0CAD/B,EAEpB,EAEMW,SAAQ,SAACf,GAAY,oGAEpBA,EAAWgB,eAAe,MAAO,CAAF,gEAItBX,EAAS,uCAAEY,IAAIb,EAAmBJ,IAAU,0CANjC,EAO3B,EAEMkB,YAAW,SAACzB,GAAI,iHACNY,EAAS,8CAASD,EAAmBX,IAAE,0CADjC,EAEtB,mCCzBF,QAXe,CACb0B,IAAK,eACLC,SAAU,uCACVC,eAAgB,qDAChBC,iBAAkB,QAClBC,YAAY,IAAIC,MAAOC,cACvBvB,cAAe,gCACfC,iBAAkB,EAClBC,kBAAmB,gFCMfsB,gBAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,oBAC/BC,OAAQF,SAASC,cAAc,qBAC/BE,QAASH,SAASC,cAAc,mBAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://restaurantcatalogue/./src/scripts/globals/api-endpoint.js","webpack://restaurantcatalogue/./src/scripts/data/dicodingapi-source.js","webpack://restaurantcatalogue/./src/scripts/data/favorite-restaurant-idb.js","webpack://restaurantcatalogue/./src/scripts/globals/config.js","webpack://restaurantcatalogue/./src/scripts/index.js"],"sourcesContent":["import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  HOME: `${CONFIG.BASE_URL}list`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","import API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass DicodingAPI {\r\n  static async Home() {\r\n    const response = await fetch(API_ENDPOINT.HOME);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async Detail(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurant;\r\n  }\r\n}\r\n\r\nexport default DicodingAPI;\r\n","/* eslint-disable consistent-return */\r\nimport { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestaurantIdb = {\r\n  async getResto(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n\r\n  async getAllResto() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n\r\n  async putResto(restaurant) {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n\r\n  async deleteResto(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n};\r\n\r\nexport default FavoriteRestaurantIdb;\r\n","const CONFIG = {\r\n  KEY: 'YOUR_API_KEY',\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/medium/',\r\n  DEFAULT_LANGUAGE: 'en-us',\r\n  CACHE_NAME: new Date().toISOString(),\r\n  DATABASE_NAME: 'restaurant-catalogue-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurants',\r\n};\r\n\r\nexport default CONFIG;\r\n","/* eslint-disable no-unused-vars */\r\nimport './data/dicodingapi-source';\r\nimport 'regenerator-runtime';\r\nimport '../styles/style.css';\r\nimport '../styles/responsive.css';\r\nimport App from './views/app';\r\nimport swRegister from './utils/sw-register';\r\nimport 'lazysizes';\r\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\r\n\r\nconst START = 10;\r\nconst NUMBER_OF_IMAGES = 100;\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst app = new App({\r\n  button: document.querySelector('#hamburgerButton'),\r\n  drawer: document.querySelector('#navigationDrawer'),\r\n  content: document.querySelector('#mainContent'),\r\n});\r\n\r\nwindow.addEventListener('hashchange', () => {\r\n  app.renderPage();\r\n});\r\n\r\nwindow.addEventListener('load', () => {\r\n  app.renderPage();\r\n  swRegister();\r\n});\r\n"],"names":["HOME","CONFIG","DETAIL","id","fetch","API_ENDPOINT","response","json","responseJson","restaurants","restaurant","i","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getResto","get","getAllResto","getAll","putResto","hasOwnProperty","put","deleteResto","KEY","BASE_URL","BASE_IMAGE_URL","DEFAULT_LANGUAGE","CACHE_NAME","Date","toISOString","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}